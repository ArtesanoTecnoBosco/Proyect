<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	x:Class="Aprendo_con_Molly.App"
	StartupUri="colores.xaml">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Simple Styles.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<!-- Debe definir aquí los recursos en el ámbito del nivel de aplicación. -->
			<Style x:Key="BotonCerrar" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Ellipse Fill="#FFF50202" Stroke="Black"/>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
								<Ellipse x:Name="Cristal" Stroke="Black" Opacity="0">
									<Ellipse.Fill>
										<RadialGradientBrush>
											<GradientStop Color="#FFE6E288" Offset="0.813"/>
											<GradientStop Color="#BFFF0C00"/>
										</RadialGradientBrush>
									</Ellipse.Fill>
								</Ellipse>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Opacity" TargetName="Cristal" Value="1"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="Minimizar" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Ellipse Fill="#FF3480EE" Stroke="Black"/>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
								<Ellipse x:Name="cristal" Stroke="Black" Opacity="0.015">
									<Ellipse.Fill>
										<RadialGradientBrush>
											<GradientStop Color="#BF0914F0" Offset="0"/>
											<GradientStop Color="#BFFFFBAB" Offset="0.749"/>
										</RadialGradientBrush>
									</Ellipse.Fill>
								</Ellipse>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Opacity" TargetName="cristal" Value="1"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<ControlTemplate x:Key="BotonColor" TargetType="{x:Type Button}">
				<Grid>
					<Grid.Background>
						<ImageBrush ImageSource="blanco.png"/>
					</Grid.Background>
				</Grid>
			</ControlTemplate>
			<Style x:Key="bNaranja" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid" Margin="52,0,0,39">
								<Rectangle x:Name="rectangle1" RadiusY="0" RadiusX="0" StrokeThickness="8" Margin="0" Height="120" VerticalAlignment="Top">
									<Rectangle.Fill>
										<ImageBrush ImageSource="naranja.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="142" Height="130"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Height" TargetName="rectangle1" Value="77"/>
									<Setter Property="Margin" TargetName="rectangle1" Value="0"/>
									<Setter Property="Width" TargetName="contentPresenter" Value="90"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="104"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="botonNaranja" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" StrokeThickness="8" Opacity="0.4">
									<Rectangle.Fill>
										<ImageBrush ImageSource="naranja.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="105"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="103.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-13,-23,0,0"/>
									<Setter Property="Margin" TargetName="rectangle" Value="-13,-23,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnAnterior" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid Margin="6,6,0,0" x:Name="grid">
								<Ellipse x:Name="btnAtras" StrokeThickness="8">
									<Ellipse.Fill>
										<ImageBrush ImageSource="boyom1.png"/>
									</Ellipse.Fill>
								</Ellipse>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Height="79.5" Margin="0" Width="68.583"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Margin" TargetName="grid" Value="-6,-6,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnPro" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Ellipse x:Name="btnAlante" StrokeThickness="8">
									<Ellipse.Fill>
										<ImageBrush ImageSource="boyom.png"/>
									</Ellipse.Fill>
								</Ellipse>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="68.583" Height="79.5"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="93.083"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="107"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-24.5,-27.5,0,0"/>
									<Setter Property="Margin" TargetName="btnAlante" Value="0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnAmarillo" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Rectangle x:Name="amarillo" StrokeThickness="8" Opacity="0.4">
									<Rectangle.Fill>
										<ImageBrush ImageSource="amarillo.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="78.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Height" TargetName="contentPresenter" Value="93.28"/>
									<Setter Property="Width" TargetName="contentPresenter" Value="106"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-14,-15,0,0"/>
									<Setter Property="Margin" TargetName="amarillo" Value="-14,-15,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="rojo" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Rectangle x:Name="btnRojo" StrokeThickness="8">
									<Rectangle.Fill>
										<ImageBrush ImageSource="rojo.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0" Width="86" Content="" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="100"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="89.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-14,-9,0,0"/>
									<Setter Property="Margin" TargetName="btnRojo" Value="-14,-9,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="dcha" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid">
								<Button Content="" Style="{DynamicResource btnPro}"/>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="68.583" Height="79.5"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Margin" TargetName="grid" Value="-7,-7,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="marrons" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid">
								<Rectangle Stroke="Black">
									<Rectangle.Fill>
										<ImageBrush ImageSource="marron.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="-8,0,0,0" Width="91.102" Height="78.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Margin" TargetName="grid" Value="-10,-12,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="negro" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid">
								<Rectangle x:Name="btnNegro" Stroke="Transparent">
									<Rectangle.Fill>
										<ImageBrush ImageSource="negro.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="83.102" Height="78.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Margin" TargetName="grid" Value="0,-1,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="rosa" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid">
								<Rectangle Stroke="Black">
									<Rectangle.Fill>
										<ImageBrush ImageSource="rosa.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="83.102" Height="78.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Margin" TargetName="grid" Value="-10,-11,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnNegro" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" StrokeThickness="8" Opacity="0.4">
									<Rectangle.Fill>
										<ImageBrush ImageSource="negro.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="105"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="103.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-13,-23,0,0"/>
									<Setter Property="Margin" TargetName="rectangle" Value="-13,-23,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnBlanco" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Grid.Background>
									<ImageBrush/>
								</Grid.Background>
								<Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" StrokeThickness="8" Opacity="0.45">
									<Rectangle.Fill>
										<ImageBrush ImageSource="blanco.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="105"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="103.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-13,-23,0,0"/>
									<Setter Property="Margin" TargetName="rectangle" Value="-13,-23,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnMarron" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" StrokeThickness="8" Opacity="0.4">
									<Rectangle.Fill>
										<ImageBrush ImageSource="marron.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="105"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="103.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-13,-23,0,0"/>
									<Setter Property="Margin" TargetName="rectangle" Value="-13,-23,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnRosa" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" StrokeThickness="8" Opacity="0.4">
									<Rectangle.Fill>
										<ImageBrush ImageSource="rosa.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="105"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="103.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-13,-23,0,0"/>
									<Setter Property="Margin" TargetName="rectangle" Value="-13,-23,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnRojo" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" StrokeThickness="8" Opacity="0.4">
									<Rectangle.Fill>
										<ImageBrush ImageSource="rojo.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="105"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="103.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-13,-23,0,0"/>
									<Setter Property="Margin" TargetName="rectangle" Value="-13,-23,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnAzul" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Grid.Background>
									<ImageBrush/>
								</Grid.Background>
								<Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" StrokeThickness="8" Opacity="0.4">
									<Rectangle.Fill>
										<ImageBrush ImageSource="azul.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="105"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="103.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-13,-23,0,0"/>
									<Setter Property="Margin" TargetName="rectangle" Value="-13,-23,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnVerde" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid>
								<Grid.Background>
									<ImageBrush/>
								</Grid.Background>
								<Rectangle x:Name="rectangle" RadiusY="0" RadiusX="0" StrokeThickness="8" Opacity="0.4">
									<Rectangle.Fill>
										<ImageBrush ImageSource="verde.png"/>
									</Rectangle.Fill>
								</Rectangle>
								<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="0" Width="92" Height="80.28"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Width" TargetName="contentPresenter" Value="105"/>
									<Setter Property="Height" TargetName="contentPresenter" Value="103.28"/>
									<Setter Property="Margin" TargetName="contentPresenter" Value="-13,-23,0,0"/>
									<Setter Property="Margin" TargetName="rectangle" Value="-13,-23,0,0"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="btnEscuchar" TargetType="{x:Type Button}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Grid x:Name="grid">
								<Label x:Name="label" Content="ESCUCHAR" Foreground="#FF7C3800" FontWeight="Bold" FontSize="21.333" FontFamily="Cooper BLACK" RenderTransformOrigin="0.5,0.5" Margin="3.333,13.333,-3.333,-13.333">
									<Label.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="-19.425"/>
											<TranslateTransform/>
										</TransformGroup>
									</Label.RenderTransform>
								</Label>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="" Margin="-4.639,-13.068,-5.306,-14.067" RenderTransformOrigin="0.5,0.5" Width="147.333" Height="60.961">
									<ContentPresenter.RenderTransform>
										<TransformGroup>
											<ScaleTransform ScaleX="-1"/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</ContentPresenter.RenderTransform>
								</ContentPresenter>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefaulted" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Margin" TargetName="grid" Value="-1,-17,0,-16"/>
								</Trigger>
								<Trigger Property="IsPressed" Value="True"/>
								<Trigger Property="IsEnabled" Value="False"/>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>